usecase:
Using Terraform, create an AWS EC2 instances in 2 regions and create an S3 bucket,add VPC,Subnets and RDS and Destroy it.

1. Create a directory
	[root@localhost]# mkdir terraform_demo2
	[root@localhost terraform_demo1]#

 2. create a terraform file
	Terraform provides everything to create your infra setup online.
	Search "aws provider terraform"
	https://registry.terraform.io/providers/hashicorp/aws/latest/docs

	[root@localhost terraform_demo1]# vim demo1.tf

provider "aws" {
  region     = "us-east-1"
  access_key = "AKIA22GJG36AC4IEAFC2"
  secret_key = "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"
}


provider "aws" {
  region     = "us-east-2"
  access_key = "AKIA22GJG36AC4IEAFC2"
  secret_key = "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"
  alias="useast2"
}


resource "aws_instance" "us-east-1" {
  ami           = "ami-0742b4e673072066f" # us-east-1
  instance_type = "t2.micro"
}

resource "aws_instance" "us-east-2" {
  ami           = "ami-05d72852800cbf29e" # us-east-2
  instance_type = "t2.micro"
  provider=aws.useast2
}

resource "aws_s3_bucket" "myfirstbucket" {
  bucket = "s3-ec2-classroom-tf-bucket"
  acl    = "private"

  tags = {
    Name        = "My Terraform bucket"
    Environment = "Dev-Env"
  }
  versioning{
        enabled=true
}
}

resource "aws_vpc" "dev" {
  cidr_block       = "10.0.0.0/16"
  instance_tenancy = "default"

  tags = {
    Name = "dev-vpc"
  }
}


resource "aws_subnet" "subnet1" {
  vpc_id     = aws_vpc.dev.id
  cidr_block = "10.0.1.0/24"

  tags = {
    Name = "subnet1"
  }
}

resource "aws_db_instance" "projectdb" {
  allocated_storage    = 10
  engine               = "mysql"
  engine_version       = "8.0.19"
  instance_class       = "db.t3.micro"
  db_name                 = "myterraformdb"
  username             = "foo"
  password             = "foobarbaz"
  parameter_group_name = "default.mysql8.0"
  skip_final_snapshot  = true
}



save the file
3. Now, need to initialize the terraform 
	[root@localhost terraform_demo1]# terraform init


4. execute terraform plan command
	[root@localhost terraform_demo1]# terraform plan
	Do you want to perform these actions?
 	 Terraform will perform the actions described above.
 	 Only 'yes' will be accepted to approve.

 	 Enter a value: yes


5. apply the terraform command
	root@localhost terraform_demo1]# terraform apply
	 
Now, get back to AWS Console and check whether EC2 instances are created in 2 regions and S3 bucket as well.


